var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => src_default
});
var import_compiler_sfc = require("@vue/compiler-sfc");
var import_magic_string = __toESM(require("magic-string"));
var src_default = (options = {}) => {
  return [
    {
      name: "vite:setup-name-support",
      enforce: "pre",
      async transform(code, id) {
        if (!/\.vue$/.test(id)) {
          return null;
        }
        const { name = true } = options;
        if (name) {
          return supportScriptName.call(this, code, id);
        }
      }
    }
  ];
};
function supportScriptName(code, id) {
  let s;
  const str = () => s || (s = new import_magic_string.default(code));
  const { descriptor } = (0, import_compiler_sfc.parse)(code);
  if (!descriptor.script && descriptor.scriptSetup) {
    const result = (0, import_compiler_sfc.compileScript)(descriptor, { id });
    const name = result.attrs.name;
    const lang = result.attrs.lang;
    if (name) {
      str().appendLeft(0, `
<script ${lang ? `lang="${lang}"` : ""}>
  import { defineComponent } from 'vue'
  export default defineComponent({
  name: '${name}',
})
<\/script>
`);
    }
    return {
      map: str().generateMap(),
      code: str().toString()
    };
  } else {
    return null;
  }
}
module.exports = __toCommonJS(src_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
