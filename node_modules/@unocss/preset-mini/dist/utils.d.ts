import * as _unocss_core from '@unocss/core';
import { VariantHandler, CSSEntries } from '@unocss/core';

declare const directionMap: Record<string, string[]>;
declare const cornerMap: Record<string, string[]>;
declare const xyzMap: Record<string, string[]>;

declare function numberWithUnit(str: string): string | undefined;
declare function rem(str: string): string | undefined;
declare function px(str: string): string | undefined;
declare function number(str: string): number | undefined;
declare function percent(str: string): string | undefined;
declare function fraction(str: string): string | undefined;
declare function bracket(str: string): string | undefined;
declare function cssvar(str: string): string | undefined;
declare function time(str: string): string | undefined;
declare function global(str: string): string | undefined;

declare const handlers_numberWithUnit: typeof numberWithUnit;
declare const handlers_rem: typeof rem;
declare const handlers_px: typeof px;
declare const handlers_number: typeof number;
declare const handlers_percent: typeof percent;
declare const handlers_fraction: typeof fraction;
declare const handlers_bracket: typeof bracket;
declare const handlers_cssvar: typeof cssvar;
declare const handlers_time: typeof time;
declare const handlers_global: typeof global;
declare namespace handlers {
  export {
    handlers_numberWithUnit as numberWithUnit,
    handlers_rem as rem,
    handlers_px as px,
    handlers_number as number,
    handlers_percent as percent,
    handlers_fraction as fraction,
    handlers_bracket as bracket,
    handlers_cssvar as cssvar,
    handlers_time as time,
    handlers_global as global,
  };
}

declare const handler: _unocss_core.ValueHandler<"number" | "numberWithUnit" | "rem" | "px" | "percent" | "fraction" | "bracket" | "cssvar" | "time" | "global">;
declare const h: _unocss_core.ValueHandler<"number" | "numberWithUnit" | "rem" | "px" | "percent" | "fraction" | "bracket" | "cssvar" | "time" | "global">;

declare const variantMatcher: (name: string, selector?: ((input: string) => string | undefined) | undefined) => (input: string) => VariantHandler | undefined;

declare function capitalize<T extends string>(str: T): Capitalize<T>;
declare const directionSize: (prefix: string) => ([_, direction, size]: string[]) => CSSEntries | undefined;

export { capitalize, cornerMap, directionMap, directionSize, h, handler, handlers as valueHandlers, variantMatcher, xyzMap };
